filenameTI.setEndIconOnClickListener {
            val theLabel = "File Name: "
            validateText(theLabel, theFileName.text.toString())
        }

        imgFormatTI.setEndIconOnClickListener {
            val theLabel = "Image Format: "
            validateText(theLabel, imgFormat.text.toString())
        }

        imgFileSizeTI.setEndIconOnClickListener {
            val theLabel = "Image File Size: "
            validateText(theLabel, imgFileSize.text.toString())
        }

        imgWidthTI.setEndIconOnClickListener {
            val theLabel = "Image Width: "
            validateText(theLabel, imgWidth.text.toString())
        }

        imgHeightTI.setEndIconOnClickListener {
            val theLabel = "Image Height: "
            validateText(theLabel, imgHeight.text.toString())
        }

        imgDateTI.setEndIconOnClickListener {
            val theLabel = "Original Date: "
            validateText(theLabel, imgDate.text.toString())
        }

        imgDateDigitizedTI.setEndIconOnClickListener {
            val theLabel = "Digitized Date: "
            validateText(theLabel, imgDateDigitized.text.toString())
        }

        imgLastModifiedDateTI.setEndIconOnClickListener {
            val theLabel = "Last Modified Date: "
            validateText(theLabel, imgLastModifiedDate.text.toString())
        }

        gpsLatTI.setEndIconOnClickListener {
            val theLabel = "GPS Latitude: "
            validateText(theLabel, gpsLat.text.toString())
        }

        gpsLongTI.setEndIconOnClickListener {
            val theLabel = "GPS Longitude: "
            validateText(theLabel, gpsLong.text.toString())
        }

        gpsLocationTI.setEndIconOnClickListener {
            val theLabel = ""
            validateText(theLabel, gpsLocation.text.toString())
        }

        camMakerTI.setEndIconOnClickListener {
            val theLabel = "Camera Maker: "
            validateText(theLabel, camMaker.text.toString())
        }

        camModelTI.setEndIconOnClickListener {
            val theLabel = "Camera Model: "
            validateText(theLabel, camModel.text.toString())
        }

        exifLensMakerTI.setEndIconOnClickListener {
            val theLabel = "Lens Maker: "
            validateText(theLabel, exifLensMaker.text.toString())
        }

        exifLensModelTI.setEndIconOnClickListener {
            val theLabel = "Lens Model: "
            validateText(theLabel, exifLensModel.text.toString())
        }

        focalLengthTI.setEndIconOnClickListener {
            val theLabel = "Focal Length: "
            validateText(theLabel, focalLength.text.toString())
        }

        camFlashTI.setEndIconOnClickListener {
            val theLabel = "Flash: "
            validateText(theLabel, camFlash.text.toString())
        }

        imgBrightnessTI.setEndIconOnClickListener {
            val theLabel = "Brightness: "
            validateText(theLabel, imgBrightness.text.toString())
        }

        whiteBalanceTI.setEndIconOnClickListener {
            val theLabel = "White Balance: "
            validateText(theLabel, whiteBalance.text.toString())
        }

        colorSpaceTI.setEndIconOnClickListener {
            val theLabel = "Color Space: "
            validateText(theLabel, colorSpace.text.toString())
        }

        imgOrientationTI.setEndIconOnClickListener {
            val theLabel = "Image Orientation: "
            validateText(theLabel, imgOrientation.text.toString())
        }

        imgXResTI.setEndIconOnClickListener {
            val theLabel = "X Resolution: "
            validateText(theLabel, imgXRes.text.toString())
        }

        imgYResTI.setEndIconOnClickListener {
            val theLabel = "Y Resolution: "
            validateText(theLabel, imgYRes.text.toString())
        }

        imgResUnitTI.setEndIconOnClickListener {
            val theLabel = "Resolution Unit: "
            validateText(theLabel, imgResUnit.text.toString())
        }

        imgYPositioningTI.setEndIconOnClickListener {
            val theLabel = "YCbCrPositioning: "
            validateText(theLabel, imgYPositioning.text.toString())
        }

        imgArtistTI.setEndIconOnClickListener {
            val theLabel = "Image Artist: "
            validateText(theLabel, imgArtist.text.toString())
        }

        imgCopyrightTI.setEndIconOnClickListener {
            val theLabel = "Copyright: "
            validateText(theLabel, imgCopyright.text.toString())
        }

        imgSoftwareTI.setEndIconOnClickListener {
            val theLabel = "Software: "
            validateText(theLabel, imgSoftware.text.toString())
        }

        exifFNumberTI.setEndIconOnClickListener {
            val theLabel = "F-Stop (F-Number): "
            validateText(theLabel, exifFNumber.text.toString())
        }

        exifISOSpeedTI.setEndIconOnClickListener {
            val theLabel = "ISO: "
            validateText(theLabel, exifISOSpeed.text.toString())
        }

        exifExposureTimeTI.setEndIconOnClickListener {
            val theLabel = "Shutter Speed: "
            validateText(theLabel, exifExposureTime.text.toString())
        }

        exifExposureBiasValueTI.setEndIconOnClickListener {
            val theLabel = "Exposure Bias: "
            validateText(theLabel, exifExposureBiasValue.text.toString())
        }

        exifExposureProgramTI.setEndIconOnClickListener {
            val theLabel = "Exposure Program: "
            validateText(theLabel, exifExposureProgram.text.toString())
        }

        exifApertureValueTI.setEndIconOnClickListener {
            val theLabel = "Aperture: "
            validateText(theLabel, exifApertureValue.text.toString())
        }

        exifMeteringModeTI.setEndIconOnClickListener {
            val theLabel = "Metering Mode: "
            validateText(theLabel, exifMeteringMode.text.toString())
        }

        sensitivityTypeTI.setEndIconOnClickListener {
            val theLabel = "Sensitivity Type: "
            validateText(theLabel, sensitivityType.text.toString())
        }

        sceneTypeTI.setEndIconOnClickListener {
            val theLabel = "Scene Type: "
            validateText(theLabel, sceneType.text.toString())
        }

        sceneCaptureTypeTI.setEndIconOnClickListener {
            val theLabel = "Scene Capture Type: "
            validateText(theLabel, sceneCaptureType.text.toString())
        }

        sensingMethodTI.setEndIconOnClickListener {
            val theLabel = "Sensing Method: "
            validateText(theLabel, sensingMethod.text.toString())
        }

        exifVersionTI.setEndIconOnClickListener {
            val theLabel = "Exif Version: "
            validateText(theLabel, exifVersion.text.toString())
        }